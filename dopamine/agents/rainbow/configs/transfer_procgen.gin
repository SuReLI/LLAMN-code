# Hyperparameters follow Hessel et al. (2018), except for sticky_actions,
# which was False (not using sticky actions) in the original paper.
import dopamine.agents.rainbow.rainbow_agent
import dopamine.discrete_domains.llamn_game_lib
import dopamine.discrete_domains.atari_lib
import dopamine.discrete_domains.run_experiment
import dopamine.discrete_domains.transfer_run_experiment
import dopamine.replay_memory.prioritized_replay_buffer
import gin.tf.external_configurables


RainbowAgent.observation_shape = %llamn_game_lib.PROCGEN_OBSERVATION_SHAPE
RainbowAgent.observation_dtype = %llamn_game_lib.PROCGEN_OBSERVATION_DTYPE
RainbowAgent.stack_size = %llamn_game_lib.PROCGEN_STACK_SIZE

RainbowAgent.num_atoms = 51
RainbowAgent.vmax = 10.
RainbowAgent.gamma = 0.99
RainbowAgent.update_horizon = 3
RainbowAgent.min_replay_history = 2000 #20000  # agent steps
RainbowAgent.update_period = 4
RainbowAgent.target_update_period = 4000  # agent steps
RainbowAgent.epsilon_train = 0.01
RainbowAgent.epsilon_eval = 0.001
RainbowAgent.epsilon_decay_period = 12500  # agent steps
RainbowAgent.replay_scheme = 'prioritized'
RainbowAgent.tf_device = '/gpu:0'  # use '/cpu:*' for non-GPU version
RainbowAgent.optimizer = @tf.train.AdamOptimizer()

# Note these parameters are different from C51's.
tf.train.AdamOptimizer.learning_rate = 0.0000625
tf.train.AdamOptimizer.epsilon = 0.00015

transfer_run_experiment.MasterRunner.first_game_name = 'Procgen-Coinrun.1-0'
transfer_run_experiment.MasterRunner.transferred_games_names = ['Procgen-Coinrun.1-1:51']
transfer_run_experiment.load_expert.nb_layers = 5

# Sticky actions with probability 0.25, as suggested by (Machado et al., 2017).
create_agent.agent_name = 'rainbow'
Runner.num_iterations = 30
Runner.training_steps = 25000  # agent steps
Runner.max_steps_per_episode = 27000  # agent steps

WrappedPrioritizedReplayBuffer.replay_capacity = 50000
WrappedPrioritizedReplayBuffer.batch_size = 32
